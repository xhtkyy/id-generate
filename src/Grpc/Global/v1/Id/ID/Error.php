<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: global/v1/id.proto

namespace Xhtkyy\IdGenerator\Grpc\Global\v1\Id\ID;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>global.v1.ID.Error</code>
 */
class Error extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.global.v1.ID.Error.Type error = 1;</code>
     */
    protected $error = 0;
    /**
     * Generated from protobuf field <code>string reason = 2;</code>
     */
    protected $reason = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $error
     *     @type string $reason
     * }
     */
    public function __construct($data = NULL) {
        \Xhtkyy\IdGenerator\Grpc\GPBMetadata\v1\Id::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.global.v1.ID.Error.Type error = 1;</code>
     * @return int
     */
    public function getError()
    {
        return $this->error;
    }

    /**
     * Generated from protobuf field <code>.global.v1.ID.Error.Type error = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setError($var)
    {
        GPBUtil::checkEnum($var, \Xhtkyy\IdGenerator\Grpc\Global\v1\Id\ID\Error\Type::class);
        $this->error = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string reason = 2;</code>
     * @return string
     */
    public function getReason()
    {
        return $this->reason;
    }

    /**
     * Generated from protobuf field <code>string reason = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setReason($var)
    {
        GPBUtil::checkString($var, True);
        $this->reason = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Error::class, \Xhtkyy\IdGenerator\Grpc\Global\v1\Id\ID_Error::class);

