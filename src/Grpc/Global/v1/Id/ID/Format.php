<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: global/v1/id.proto

namespace Xhtkyy\IdGenerator\Grpc\Global\v1\Id\ID;

use UnexpectedValueException;

/**
 * Protobuf type <code>global.v1.ID.Format</code>
 */
class Format
{
    /**
     * 原生格式，不编码
     *
     * Generated from protobuf enum <code>RAW = 0;</code>
     */
    const RAW = 0;
    /**
     * 单个大整数
     *
     * Generated from protobuf enum <code>INT64 = 1;</code>
     */
    const INT64 = 1;
    /**
     * base64 编码，采用 go 包 encoding/base64 的 RawURLEncoding 方法
     *
     * Generated from protobuf enum <code>BASE64 = 2;</code>
     */
    const BASE64 = 2;
    /**
     * 改进型的 base64 编码
     *
     * Generated from protobuf enum <code>BASE64X = 3;</code>
     */
    const BASE64X = 3;
    /**
     * base36 编码，采用 go 包 strconv 的 FormatInt 方法
     *
     * Generated from protobuf enum <code>BASE36 = 4;</code>
     */
    const BASE36 = 4;
    /**
     * 散列编码，采用 sha1 散列后的十六进制编码，采用 go 包 crypto/sha1 的 Sum 方法
     *
     * Generated from protobuf enum <code>HASH = 5;</code>
     */
    const HASH = 5;

    private static $valueToName = [
        self::RAW => 'RAW',
        self::INT64 => 'INT64',
        self::BASE64 => 'BASE64',
        self::BASE64X => 'BASE64X',
        self::BASE36 => 'BASE36',
        self::HASH => 'HASH',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Format::class, \Xhtkyy\IdGenerator\Grpc\Global\v1\Id\ID_Format::class);

