<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: global/v1/id.proto

namespace Xhtkyy\IdGenerator\Grpc\Global\v1\Id\ID;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>global.v1.ID.Secret</code>
 */
class Secret extends \Google\Protobuf\Internal\Message
{
    /**
     * 数字签名
     *
     * Generated from protobuf field <code>string signature = 6;</code>
     */
    protected $signature = '';
    /**
     * 安全随机数
     *
     * Generated from protobuf field <code>string nonce = 7;</code>
     */
    protected $nonce = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $signature
     *           数字签名
     *     @type string $nonce
     *           安全随机数
     * }
     */
    public function __construct($data = NULL) {
        \Xhtkyy\IdGenerator\Grpc\GPBMetadata\v1\Id::initOnce();
        parent::__construct($data);
    }

    /**
     * 数字签名
     *
     * Generated from protobuf field <code>string signature = 6;</code>
     * @return string
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * 数字签名
     *
     * Generated from protobuf field <code>string signature = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkString($var, True);
        $this->signature = $var;

        return $this;
    }

    /**
     * 安全随机数
     *
     * Generated from protobuf field <code>string nonce = 7;</code>
     * @return string
     */
    public function getNonce()
    {
        return $this->nonce;
    }

    /**
     * 安全随机数
     *
     * Generated from protobuf field <code>string nonce = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setNonce($var)
    {
        GPBUtil::checkString($var, True);
        $this->nonce = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Secret::class, \Xhtkyy\IdGenerator\Grpc\Global\v1\Id\ID_Secret::class);

