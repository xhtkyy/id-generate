<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: global/v1/id.proto

namespace Xhtkyy\IdGenerator\Grpc\Global\v1\Id\ID;

use UnexpectedValueException;

/**
 * Protobuf type <code>global.v1.ID.Type</code>
 */
class Type
{
    /**
     * 随机的
     *
     * Generated from protobuf enum <code>RANDOM = 0;</code>
     */
    const RANDOM = 0;
    /**
     * 顺序的
     *
     * Generated from protobuf enum <code>SEQUENCE = 1;</code>
     */
    const SEQUENCE = 1;

    private static $valueToName = [
        self::RANDOM => 'RANDOM',
        self::SEQUENCE => 'SEQUENCE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Xhtkyy\IdGenerator\Grpc\Global\v1\Id\ID_Type::class);

